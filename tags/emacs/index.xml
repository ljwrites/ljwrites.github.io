<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>emacs on Un-author-ized writer</title>
    <link>http://ljwrites.blog/tags/emacs/</link>
    <description>Recent content in emacs on Un-author-ized writer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC BY-NC</copyright>
    <lastBuildDate>Tue, 03 Jan 2023 00:00:00 +0900</lastBuildDate><atom:link href="http://ljwrites.blog/tags/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Writing year in review: My 2022 writing habit on Emacs</title>
      <link>http://ljwrites.blog/posts/2022-writing-review/</link>
      <pubDate>Tue, 03 Jan 2023 00:00:00 +0900</pubDate>
      
      <guid>http://ljwrites.blog/posts/2022-writing-review/</guid>
      <description>What is most meaningful to me about my writing habit is that the dream of writing this story is no longer a dream, but my waking reality.</description>
      <content:encoded><![CDATA[<p>My New Year&rsquo;s resolution for 2022 was to write 300 words every day on the first draft of my big fiction project.
Plot twist, I actually stuck to it!
Just don&rsquo;t ask about the state of my physical activity habit, please.</p>
<p>Here are the year&rsquo;s writing statistics from writing most days from January 2 to December 31, 2022, taken using functionalities and packages of Emacs Org Mode, and my takeaways from these numbers.</p>
<h2 id="the-words-and-the-hours">The words and the hours</h2>
<p>According to a word count and Org Mode&rsquo;s <a href="https://orgmode.org/manual/The-clock-table.html">clock table</a> report, I wrote somewhere around <strong>170,000 words</strong> this year in 11 days, 2 hours, and 9 minutes, or around <strong>266 hours of writing.</strong></p>
<p>These numbers come with some caveats:
The word count function does give me an exact count, 174,369, but this is an overcount that includes elements that won&rsquo;t be exported such as header (scene) labels, in-file notes, and time stamps.
This works for me, since I only need a rough estimate of where I am and not a laser-precise word count.
Besides, even considering the overcount I know this is Too Much!
I&rsquo;m going to hate my first-draft self once I have my editing hat on, that&rsquo;s for sure.</p>
<p>The hours spent writing are similarly imprecise.
I started using Org Mode&rsquo;s <a href="https://orgmode.org/manual/Clocking-commands.html">clocking commands</a> fairly early in the year (January 5) to start keeping track of writing time, and there&rsquo;s some undercount from the first few days when the clock was not used.
Discounting that fairly small gap, which can&rsquo;t be by more than 2 hours, I was also inconsistent at times about running the clock.
Sometimes I ran the clock but was not writing, and at other times it was the other way around, though this was rarer.
For these reasons both the word count and reported time are more estimates than exact measures.</p>
<h2 id="words-per-hour-and-day">Words per hour and day</h2>
<p>Keeping those limitations in mind, a very rough estimate of my writing speed this year was <strong>639 words/hour</strong>, and I wrote an average of <strong>465 words a day</strong> during the year, counting the skipped days.
On the days I did write the average was <strong>544 words a day</strong>.</p>
<p>The estimated hourly word rate largely matches up with what I&rsquo;ve sensed on a regular day of writing, that I tend to produce about 100 words per 10 minutes or maybe a little more.
The per-day rate is a bit of a surprise, given that my goal was to write 300 words a day and I often did stop at almost exactly 300 words, especially on days the words weren&rsquo;t coming.
I guess it makes sense though, since I did overachieve a lot of days, by a lot at times.</p>
<p>The ironic/interesting part is, I think it was my keeping the goal at 300 words that allowed me to write an average of 500 words a day.
A lot of days I could only bear to start writing because I told myself I just had to do 300 words, and actually stopped at 300 when I was struggling and tired.
There were many days I could not have started at all at the thought of having to write 500 words a day, and that would have meant a lot fewer words.</p>
<h2 id="habit-consistency-and-achievement">Habit consistency and achievement</h2>
<p>In addition to writing and getting these stats in Org Mode, I had also been tracking my writing <a href="https://orgmode.org/manual/Tracking-your-habits.html">as a habit</a>.
At the end of 2022 I used a neat package called <a href="https://github.com/ml729/org-habit-stats">org-habit-stats</a> to get a calendar view and some statistics on the writing habit.</p>
<p>According to the statistics, I wrote <strong>312 days</strong> out of the year, or <strong>85%</strong> of days in 2022.
Nearly a third of the missed days come from February when I was having a hard time keeping up with writing, as seen in this calendar view of writing statistics:</p>
<figure>
    <img loading="lazy" src="https://ljwrites.blog/img/emacs/org-habit-stat-1-3.png"
         alt="Marked calendar view of habit from January to March with a handful of days missing from January and March, and more than half the days missing from February."/> 
</figure>

<figure>
    <img loading="lazy" src="https://ljwrites.blog/img/emacs/org-habit-stat-4-6.png"
         alt="Calendar view from April to June with two days missing from each month."/> 
</figure>

<figure>
    <img loading="lazy" src="https://ljwrites.blog/img/emacs/org-habit-stat-7-9.png"
         alt="Calendar view from July to September with two to four days missing from each month."/> 
</figure>

<figure>
    <img loading="lazy" src="https://ljwrites.blog/img/emacs/org-habit-stat-10-12.png"
         alt="Calendar view from October to December with three to four days missing from each month."/> 
</figure>

<p>As you can see I generally wrote on most days of the month, usually missing two to four days in a month.
Those would have been the days when I was overwhelmed by work or family obligations, or just needed a break.</p>
<p>The one outlier is February, when I was missing over half the days of the month.
This was likely because I was wrapping up my last academic gig during that month before I turned to full-time translation in March, something that made a huge difference in my free time and energy levels.</p>
<p>It wasn&rsquo;t as though I became a different person with more energy or &ldquo;willpower&rdquo; between the end of February and the start of March.
I had simply structured my life in a way that made room for writing and that made all the difference, which may be the true takeaway from this year of writing.</p>
<h2 id="numbers-for-what-they-re-worth">Numbers, for what they&rsquo;re worth</h2>
<p>Word count and hours spent writing are just numbers at the end of the day&ndash;or year, as it were.
They&rsquo;re mostly meaningful to me as an indication for how far I&rsquo;ve come, even as I realize how far I still have to go.
The story has grown in length far beyond my original expectations and I&rsquo;m just slogging on to get to the end of my originally envisioned story, so I can turn around to figure out stuff like editing (I expect to cut extravagantly) and book divisions.</p>
<p>I&rsquo;d frankly have been happier to have reached the end of my draft than to have written so many words, but I&rsquo;m letting the process take control for now as I try to feel out the world and narrative by writing through them.
Stats are one part of that journey but far from the whole experience, any more than kilometers and hours driven can tell you about the scenery seen outside the window or the smell of the car seats.</p>
<p>What is most meaningful to me about my writing habit is that the dream of writing this story is no longer a dream but my waking reality, and that it <em>will</em> be done at some point barring some huge, unforeseen change.
I know I am moving toward the endpoint, steadily if slowly.
Once I get there, I will know the key was the momentum of consistent habit.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>How I Got into Emacs</title>
      <link>http://ljwrites.blog/posts/how-i-got-into-emacs/</link>
      <pubDate>Sat, 19 Jun 2021 00:00:00 +0900</pubDate>
      
      <guid>http://ljwrites.blog/posts/how-i-got-into-emacs/</guid>
      <description>The true gift of Emacs may be the ability to make it your own in every sense.</description>
      <content:encoded><![CDATA[<p>From time to time I&rsquo;m asked, perhaps especially as a non-dev who uses Emacs every day, how I got into what is considered development software and one seen as esoteric and antiquated at that.
I thought I&rsquo;d write about my experience with Emacs and the advice I would personally give to people who are thinking of getting into it.</p>
<h2 id="destination-emacs">Destination: Emacs</h2>
<p>It probably helped lead me to Emacs that I&rsquo;ve been a hobby coder for decades and like to fiddle with computers.
I&rsquo;m known as the tech person in my family, and have written small apps in Python 2 including an IRC dicebot in the 00&rsquo;s.
Yes, I&rsquo;m That old.
I&rsquo;ve used PHP and MySQL to run hosted blogs; I&rsquo;ve tried Ubuntu and now use an Arch Linux installation daily.
Coding and computers don&rsquo;t scare me, and what I lack in expertise and training I make up for in sheer determination and willingness to pour countless hours into solving a problem (thanks, ADHD hyperfocus!!).
So in a way a developer&rsquo;s tool like Emacs was a natural fit for me.</p>
<p>Even so, I don&rsquo;t think I would have bothered with something as complex as Emacs if it weren&rsquo;t for my growing discontentment with the software I used in my writing.
LibreOffice was and is my favorite word processor but still, it&rsquo;s a word processor.
They have their uses and are necessary for my work, but the mix of formatting and content was constraining for first drafts, and the completely linear treatment of the text did not lend itself to flexible thinking about the text and content.
Ultimately, in my workflow, word processors are for presenting text, not creating it.</p>
<p>Scrivener was great while it lasted.
At the time it was a completely new paradigm of writing software for me, with the ability to make text modular and to rearrange it, and snapshots as a rudimentary form of version control.
Still, it too had its problems.
The lack of certain functions like mobile editing, good collaboration support, and portable files became increasingly glaring.
The last straw came when I was locked out of software I had paid for&ndash;twice, on Windows and later Macbook!&ndash;due to the company&rsquo;s server problems.
Shortly afterward I moved to Linux for the reasons discussed in <a href="https://linuxrig.com/2021/03/31/the-linux-setup-l-j-lee-translator-researcher-writer/">my Linux Setup submission</a>, and using Scrivener became a moot point anyway.
Years of experience with Scrivener did give me a better idea of what I wanted in a piece of writing software, however:
Separation of content and presentation, version control, and the ability to move pieces of text around and edit them individually.
I also wanted them in a form that couldn&rsquo;t be arbitrarily locked down, corrupted, or otherwise made inaccessible.</p>
<p>Obviously, I learned over time that the things I wanted were doable by editing in plain text formats.
I looked around for plaintext editing options that would also allow for making text modular.
LaTeX was in serious running for a while and I even read a book about it before deciding it wasn&rsquo;t right for me and my non-technical use-case.
AsciiDoc was great and I worked on a fair number of projects with it writing on Vim, which was when I completely fell in love with Vim&rsquo;s editing capabilities.
The modular treatment of text was incomplete at best under this format and software combination, however.</p>
<p>I thought about writing an Atom plugin or even writing a text editor myself to get the functions I wanted&ndash;yeah, that would have gone well lol&ndash;before, as so many do, I found out about Emacs and Org Mode.
(Update 2022-10-22: And, of course, GitHub has since <a href="https://github.blog/2022-06-08-sunsetting-atom/">pulled the plug on Atom</a> while Emacs is still going as it has for decades before Atom ever existed.)
Through my research I learned Org had everything I was looking for, could be exported to a bunch of other formats, <em>and</em> that it emulated Vim commands through Evil Mode.
Sold, sold, and sold.
I decided to make the jump.
I installed Emacs and very slowly started trying things on it and learning the ropes.</p>
<h2 id="building-up-my-emacs-configuration">Building up my Emacs configuration</h2>
<p>It took me a while to &ldquo;warm up&rdquo; to real configuration work on Emacs.
I used it intermittently  for months with the default splash screen enabled (cringe!), learning basic commands.
I did the built-in tutorial, read or watched some guides like this <a href="https://www.youtube.com/watch?v=oJTwQvgfgMM&amp;t=84s">amazing talk by Org Mode creator Carsten Dominik</a>, and tried to get used to the interface when I had spare time.</p>
<p>At first I didn&rsquo;t even install Evil Mode despite not liking the default Emacs movement keys at all.
For one thing I hadn&rsquo;t figured out the package system yet, and even though it was always the plan to install Evil Mode and its availability was one reason I made the jump from Vim to Emacs, I wanted to give the native Emacs commands a fair shake and at least learn the basics.</p>
<p>I slowly got into things like Org Mode, using the most basic functions which were more than enough at first when I was still new to it.
As Carsten Dominik put it, that&rsquo;s a great thing about Org, that you can start as simply as you like and work your way up to as much or as little complexity as you need.</p>
<p>It was only after months of having at least a shaky grasp of basic Emacs functions that I started doing things like configuring visuals and adding packages, spurred on in part by the Emacs from Scratch videos on the <a href="https://www.youtube.com/channel/UCAiiOTio8Yu69c3XnR7nQBQ">System Crafters</a> channel that was just taking off at the time.
I didn&rsquo; use even a fraction of the advice given on that channel, though.
Instead I mostly used the videos as inspiration and a jumping-off point for more research on how to do specific things when I saw the host doing stuff I wanted for my own setup.</p>
<h2 id="satisfied-mode">Satisfied Mode</h2>
<p>Since then I&rsquo;ve read two books about Emacs, <a href="https://www.oreilly.com/library/view/learning-gnu-emacs/0596006489/">Learning Gnu Emacs</a> and <a href="https://www.masteringemacs.org/">Mastering Emacs</a>.
I found them engaging reads that taught me a lot more about how Emacs works.
I have also been intermittently reading the <a href="https://orgmode.org/manual/">Org Mode Manual</a>, from which I learned a lot of little tricks to make Org more versatile and convenient for me.</p>
<p>Between this and a lot of things I found out through YouTube, Reddit, and online friends, my init.el has grown to a little over 300 lines.
That&rsquo;s tiny in comparison to Emacs veterans, of course, but is in keeping with my motto, as they say, to move slow and fix things.
I&rsquo;m not technically ambitious or highly skilled; I just want a tool that works more or less how I want it to and doesn&rsquo;t require my data to be sent to a company, one that would not stop being supported because it&rsquo;s no longer profitable.
GNU Emacs, configured little by little entirely at my own pace and actively developed for decades by a worldwide team of maintainers and contributors, exactly fits that bill.</p>
<p>The good news is, that means you can use Emacs too as someone who isn&rsquo;t necessarily technologically proficient and just wants a stable working environment, if you don&rsquo;t mind a slow pace and some work including a little coding.</p>
<h2 id="general-advice">General advice</h2>
<p>My best advice based on personal experience? Don&rsquo;t rush it!</p>
<p>Emacs can seem big and intimidating if you want to learn the ins and outs and to customize it to your exact needs, and honestly it <em>is</em> intimidating and time-consuming to do all that.</p>
<p>It becomes more manageable, though, when you start simple and go slowly.
Add configurations and packages as you feel the need and as you become more comfortable with the platform and Emacs Lisp, the language of Emacs.</p>
<p>Going step by step, breaking and then fixing things as you go, will help you understand your configuration and learn with it.
It&rsquo;ll make the dreaded &ldquo;.emacs bankruptcy&rdquo; where your configuration breaks beyond repair less likely, both because your configuration will be easier to debug when it changes in increments and because you understand what went into it.</p>
<p>I guess the above tips my hand on the &ldquo;vanilla or packaged distro&rdquo; issue, too.
By packaged distros I mean distributions like Doom Emacs or Space Emacs that come with a lot of configurations out of the box, with Vim-style keybindings in the case of both Doom and Space Emacs.</p>
<p>To be clear, I&rsquo;m not about to tell anyone not to get an Emacs distro.
They do cool stuff at only a fraction of the time and effort of setting up vanilla Emacs, and I can see why they&rsquo;re popular.
If spending a lot of painstaking effort on configurations isn&rsquo;t your thing and a distro looks right for you, by all means go for it.</p>
<p>That said, I would not install a distro myself because I&rsquo;ve heard stories of the codebase breaking or no longer being supported in some environments.
This is not the kind of risk I&rsquo;m willing to take, to lose an entire working environment I&rsquo;ve come to rely on with no practical way to get it back.
For me vanilla GNU Emacs, configured by my hand, is much more versatile and easier to repair in case something breaks or changes.</p>
<p>Distros are a valid choice depending on your personal balance of stability versus convenience.
I just happen to fall more on the stability side of things, and it doesn&rsquo;t hurt that I actually like to spend time on configurations because I find them fun to do, in reasonable doses.</p>
<p>Above all, I hope you&rsquo;ll have fun with it!
Emacs is a practical and powerful platform, but it can also be a deeply personal project that is molded to you and changes according to your needs, preferences, and growing skill.
Emacs is my main software for writing, my file manager, my task and schedule manager, my email program, my main git interface&hellip; so much of my life is tied into it.
It&rsquo;s an experience like no other I&rsquo;ve had with software and can be a rollercoaster of excitement for the new, the comfort of the familiar, and, I&rsquo;ll be honest, bouts of hair-tearing frustration.
There&rsquo;s also the good, solid satisfaction of crafting a tool you use daily with your own hands, piece by piece.
You can make it uniquely yours if you&rsquo;re willing to put in the work.
That may be the true gift of Emacs, the ability to make it your own in every sense.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>Mu4e Error in Process Sentinel: Mu Server Process Ended with Exit 1</title>
      <link>http://ljwrites.blog/posts/mu4e-mu-server-process-error/</link>
      <pubDate>Tue, 15 Jun 2021 00:00:00 +0900</pubDate>
      
      <guid>http://ljwrites.blog/posts/mu4e-mu-server-process-error/</guid>
      <description>Shutting down mu server turned out to be effective when mu4e wouldn&amp;rsquo;t start.</description>
      <content:encoded><![CDATA[<p>Because no upgrade goes unpunished, Mu4e was refusing to start up in Emacs, throwing an &ldquo;error in process sentinel: Mu server process ended with exit 1&rdquo; error.
I couldn&rsquo;t find this exact error message online, but a look through posts about similar error messages revealed that complaints about the Mu server were often caused by the server still running.
I took the advice in <a href="https://github.com/djcb/mu/issues/8">this Mu4e issue thread</a> and ran:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>pkill -2 -u $UID mu
</span></span></code></pre></div><p>&hellip;exactly like that, without replacing the <code>$UID</code> with anything.
Mu4e sprang right back up afterward, having grabbed control of the database back from the server process that had been running.</p>
<p>Still waiting wearily for more troubles to happen, but in the meantime at least I can read emails again.</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>
